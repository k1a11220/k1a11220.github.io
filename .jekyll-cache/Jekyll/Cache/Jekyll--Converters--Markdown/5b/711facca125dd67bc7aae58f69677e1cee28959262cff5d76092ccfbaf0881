I"z<p><em>모든 내용은 MacOS Catalina 기준으로 작성되었습니다</em></p>

<h2 id="1-prisma란">1. Prisma란?</h2>

<p>Prisma는 ORM입니다. - Object-relational mapping (객체관계연결)<br />
Prisma는 어플리케이션에 필요한 모델을 graphql로 정의할 수 있습니다.<br />
Prisma에서 프로젝트를 만든 뒤 로컬 파일과의 연동이 필요합니다.</p>

<h4 id="prisma-설치">Prisma 설치</h4>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>prisma init
</code></pre></div></div>

<h2 id="2-datamodel-정의하기">2. Datamodel 정의하기</h2>

<p>datamodel.prisma 파일을 열어 살펴봅시다.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">type</span> <span class="nx">User</span> <span class="p">{</span>
    <span class="nl">Id</span><span class="p">:</span> <span class="nx">ID</span><span class="o">!</span> <span class="p">@</span><span class="nd">id</span>
    <span class="nx">Name</span><span class="p">:</span> <span class="nb">String</span><span class="o">!</span>
<span class="p">}</span>
</code></pre></div></div>

<p>기본적으로 User가 생성되어 있습니다.<br />
만약, 여기에 인스타그램처럼 following과 follwers를 만들려고 한다면</p>

<div class="language-graphql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">type</span><span class="w"> </span><span class="n">User</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">id</span><span class="p">:</span><span class="w"> </span><span class="nb">ID</span><span class="p">!</span><span class="w"> </span><span class="err">@</span><span class="n">id</span><span class="w">
  </span><span class="n">following</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="n">User</span><span class="p">!]!</span><span class="w"> </span><span class="err">@</span><span class="n">relation</span><span class="p">(</span><span class="n">name</span><span class="p">:</span><span class="w"> </span><span class="err">"</span><span class="n">FollowRelation</span><span class="err">"</span><span class="p">)</span><span class="w">
  </span><span class="n">followers</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="n">User</span><span class="p">!]!</span><span class="w"> </span><span class="err">@</span><span class="n">relation</span><span class="p">(</span><span class="n">name</span><span class="p">:</span><span class="w"> </span><span class="err">"</span><span class="n">FollowRelation</span><span class="err">"</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>이처럼 Prisma의 Datamodel은 만들기 편하게 되어있습니다.</p>

<h2 id="이슈">이슈</h2>

<p>아래처럼 Datamodel 작성시 type마다 id를 부여하지 않아서 에러가 발생합니다.</p>

<div class="language-graphql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">type</span><span class="w"> </span><span class="n">User</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">Id</span><span class="p">:</span><span class="w"> </span><span class="nb">ID</span><span class="p">!</span><span class="w"> </span><span class="err">@</span><span class="n">id</span><span class="w">
    </span><span class="n">Name</span><span class="p">:</span><span class="w"> </span><span class="nb">String</span><span class="p">!</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="k">type</span><span class="w"> </span><span class="n">Comment</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">user</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="n">User</span><span class="p">!</span><span class="w">
    </span><span class="n">text</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="nb">String</span><span class="p">!</span><span class="w">
    </span><span class="n">post</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="n">Post</span><span class="p">!</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>따라서 모든 type에 id를 추가하여 에러를 해결할 수 있습니다.</p>

<div class="language-graphql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">type</span><span class="w"> </span><span class="n">User</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">Id</span><span class="p">:</span><span class="w"> </span><span class="nb">ID</span><span class="p">!</span><span class="w"> </span><span class="err">@</span><span class="n">id</span><span class="w">
    </span><span class="n">Name</span><span class="p">:</span><span class="w"> </span><span class="nb">String</span><span class="p">!</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="k">type</span><span class="w"> </span><span class="n">Comment</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">Id</span><span class="p">:</span><span class="w"> </span><span class="nb">ID</span><span class="p">!</span><span class="w"> </span><span class="err">@</span><span class="n">id</span><span class="w">
    </span><span class="n">user</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="n">User</span><span class="p">!</span><span class="w">
    </span><span class="n">text</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="nb">String</span><span class="p">!</span><span class="w">
    </span><span class="n">post</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="n">Post</span><span class="p">!</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>
:ET